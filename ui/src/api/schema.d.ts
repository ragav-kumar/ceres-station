/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Consumer/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConsumerDto"];
                        "application/json": components["schemas"]["ConsumerDto"];
                        "text/json": components["schemas"]["ConsumerDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ConsumerDto"];
                    "text/json": components["schemas"]["ConsumerDto"];
                    "application/*+json": components["schemas"]["ConsumerDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConsumerDto"];
                        "application/json": components["schemas"]["ConsumerDto"];
                        "text/json": components["schemas"]["ConsumerDto"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Consumer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ConsumerDto"];
                    "text/json": components["schemas"]["ConsumerDto"];
                    "application/*+json": components["schemas"]["ConsumerDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ConsumerDto"];
                        "application/json": components["schemas"]["ConsumerDto"];
                        "text/json": components["schemas"]["ConsumerDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Extractors/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ExtractorDto"];
                        "application/json": components["schemas"]["ExtractorDto"];
                        "text/json": components["schemas"]["ExtractorDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ExtractorDto"];
                    "text/json": components["schemas"]["ExtractorDto"];
                    "application/*+json": components["schemas"]["ExtractorDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ExtractorDto"];
                        "application/json": components["schemas"]["ExtractorDto"];
                        "text/json": components["schemas"]["ExtractorDto"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Extractors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ExtractorDto"];
                    "text/json": components["schemas"]["ExtractorDto"];
                    "application/*+json": components["schemas"]["ExtractorDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ExtractorDto"];
                        "application/json": components["schemas"]["ExtractorDto"];
                        "text/json": components["schemas"]["ExtractorDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/List/{entityTypeName}/Columns": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    entityTypeName: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ColumnDto"][];
                        "application/json": components["schemas"]["ColumnDto"][];
                        "text/json": components["schemas"]["ColumnDto"][];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    entityTypeName: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ColumnDto"][];
                    "text/json": components["schemas"]["ColumnDto"][];
                    "application/*+json": components["schemas"]["ColumnDto"][];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ColumnDto"][];
                        "application/json": components["schemas"]["ColumnDto"][];
                        "text/json": components["schemas"]["ColumnDto"][];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/List/{entityTypeName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    entityTypeName: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ListDataDto"];
                        "application/json": components["schemas"]["ListDataDto"];
                        "text/json": components["schemas"]["ListDataDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Processors/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProcessorDto"];
                        "application/json": components["schemas"]["ProcessorDto"];
                        "text/json": components["schemas"]["ProcessorDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ProcessorDto"];
                    "text/json": components["schemas"]["ProcessorDto"];
                    "application/*+json": components["schemas"]["ProcessorDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProcessorDto"];
                        "application/json": components["schemas"]["ProcessorDto"];
                        "text/json": components["schemas"]["ProcessorDto"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Processors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["ProcessorDto"];
                    "text/json": components["schemas"]["ProcessorDto"];
                    "application/*+json": components["schemas"]["ProcessorDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ProcessorDto"];
                        "application/json": components["schemas"]["ProcessorDto"];
                        "text/json": components["schemas"]["ProcessorDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Settings/Money": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: {
                    moneyDelta?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": number;
                        "application/json": number;
                        "text/json": number;
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Transports/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TransportDto"];
                        "application/json": components["schemas"]["TransportDto"];
                        "text/json": components["schemas"]["TransportDto"];
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TransportDto"];
                    "text/json": components["schemas"]["TransportDto"];
                    "application/*+json": components["schemas"]["TransportDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TransportDto"];
                        "application/json": components["schemas"]["TransportDto"];
                        "text/json": components["schemas"]["TransportDto"];
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Transports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TransportDto"];
                    "text/json": components["schemas"]["TransportDto"];
                    "application/*+json": components["schemas"]["TransportDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TransportDto"];
                        "application/json": components["schemas"]["TransportDto"];
                        "text/json": components["schemas"]["TransportDto"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ColumnDto: {
            /** Format: uuid */
            id?: string | null;
            entityType?: components["schemas"]["EntityType"];
            displayName?: string | null;
            /** Format: uuid */
            attributeDefinitionId?: string | null;
            fieldName?: string | null;
            /** Format: int32 */
            width?: number | null;
            /** Format: int32 */
            order?: number | null;
        };
        ConsumerDto: {
            /** Format: uuid */
            id?: string | null;
            name?: string | null;
            position?: components["schemas"]["Position"];
            /** Format: float */
            consumptionRate?: number | null;
            /** Format: float */
            standardDeviation?: number | null;
            /** Format: float */
            stockpile?: number | null;
            /** Format: float */
            capacity?: number | null;
            resource?: components["schemas"]["ResourceDto"];
        };
        EntityDto: {
            /** Format: uuid */
            id?: string | null;
            name?: string | null;
            position?: components["schemas"]["Position"];
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        EntityType: 0 | 1 | 2 | 3 | 4;
        ExtractorDto: {
            /** Format: uuid */
            id?: string | null;
            name?: string | null;
            position?: components["schemas"]["Position"];
            /** Format: float */
            extractionRate?: number | null;
            /** Format: float */
            standardDeviation?: number | null;
            /** Format: float */
            stockpile?: number | null;
            /** Format: float */
            capacity?: number | null;
            resource?: components["schemas"]["ResourceDto"];
        };
        ListDataDto: {
            rows?: {
                [key: string]: unknown;
            }[] | null;
            /** Format: int32 */
            totalCount?: number;
        };
        Position: {
            /** Format: double */
            x?: number;
            /** Format: double */
            y?: number;
            /** Format: double */
            z?: number;
        };
        ProcessorDto: {
            /** Format: uuid */
            id?: string | null;
            name?: string | null;
            position?: components["schemas"]["Position"];
            /** Format: float */
            timeStep?: number | null;
            inputs?: components["schemas"]["ReagentDto"][] | null;
            outputs?: components["schemas"]["ReagentDto"][] | null;
        };
        ReagentDto: {
            /** Format: uuid */
            id?: string | null;
            resource?: components["schemas"]["ResourceDto"];
            /** Format: float */
            count?: number | null;
            /** Format: float */
            stockpileCapacity?: number | null;
        };
        ResourceDto: {
            /** Format: uuid */
            id?: string;
            name?: string | null;
        };
        TransportDto: {
            /** Format: uuid */
            id?: string | null;
            name?: string | null;
            position?: components["schemas"]["Position"];
            /** Format: float */
            tripTimeStandardDeviation?: number | null;
            /** Format: float */
            currentCargo?: number | null;
            /** Format: float */
            capacity?: number | null;
            source?: components["schemas"]["EntityDto"];
            destination?: components["schemas"]["EntityDto"];
            resource?: components["schemas"]["ResourceDto"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
